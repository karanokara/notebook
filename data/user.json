[{"username":"happy","password":"12","name":"HappyTester","lastLogin":1565231945484,"currentLogin":1565240970721,"lastLoginString":"2019/08/07 - 19:39","noteCount":6,"list":[{"title":"Apple","noteId":1,"type":"file","lastUpdate":"","create":"172837283","note":"Donec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo."},{"title":"Banana","noteId":2,"type":"file","lastUpdate":"1643361211","create":"172837283","note":"Donec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus"},{"title":"Cat","noteId":3,"type":"file","lastUpdate":null,"create":"172837283","note":"Donec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus"},{"title":"Dog","noteId":4,"type":"file","lastUpdate":"","create":"172837283","note":"Donec id elit "},{"title":"OAuth","noteId":5,"type":"file","lastUpdate":"2019/08/07 - 22:14","create":"172837283","note":"OAuth (formally specified by RFC 5849) provides a means for users to grant third-party applications access to their data without exposing their password to those applications.\n\nThe protocol greatly improves the security of web applications, in particular, and OAuth has been important in bringing attention to the potential dangers of exposing passwords to external services.\n\nWhile OAuth 1.0 is still widely used, it has been superseded by OAuth 2.0. It is recommended to base new implementations on OAuth 2.0."},{"title":"Passport.js","noteId":6,"type":"file","lastUpdate":null,"create":"2019/08/07 - 22:05","note":"Passport is authentication middleware for Node. It is designed to serve a singular purpose: authenticate requests. When writing modules, encapsulation is a virtue, so Passport delegates all other functionality to the application. This separation of concerns keeps code clean and maintainable, and makes Passport extremely easy to integrate into an application."}],"settings":{"noteOrderName":"Name","noteOrderDirection":"down","noteDisplay":"list"}},{"username":"abc","password":"12345","name":"ABCD","lastLogin":1565310249418,"currentLogin":1565310371557,"lastLoginString":"2019/08/08 - 17:24","noteCount":8,"list":[{"title":"A Day","noteId":4,"type":"file","lastUpdate":null,"create":"2019/08/07 - 13:11","note":"This class of status code is intended for situations in which the error seems to have been caused by the client. Except when responding to a HEAD request, the server should include an entity containing an explanation of the error situation, and whether it is a temporary or permanent condition. These status codes are applicable to any request method."},{"title":"Three","noteId":5,"type":"file","lastUpdate":null,"create":"2019/08/07 - 13:11","note":"mememem"},{"title":"OpenID","noteId":6,"type":"file","lastUpdate":"2019/08/07 - 22:41","create":"2019/08/07 - 13:23","note":"OpenID is an open standard for federated authentication. When visiting a website, users present their OpenID to sign in. The user then authenticates with their chosen OpenID provider, which issues an assertion to confirm the user's identity. The website verifies this assertion in order to sign the user in."},{"title":"Routes","noteId":8,"type":"file","lastUpdate":null,"create":"2019/08/07 - 22:43","note":"Two routes are required for OpenID authentication. The first route accepts the form submission containing an OpenID identifier. During authentication, the user will be redirected to their OpenID provider. The second route is the URL to which the user will be returned after authenticating with their OpenID provider."}],"settings":{"noteOrderName":"Name","noteOrderDirection":"down","noteDisplay":"list"}}]